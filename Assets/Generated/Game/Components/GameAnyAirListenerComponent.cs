//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyAirListenerComponent anyAirListener { get { return (AnyAirListenerComponent)GetComponent(GameComponentsLookup.AnyAirListener); } }
    public bool hasAnyAirListener { get { return HasComponent(GameComponentsLookup.AnyAirListener); } }

    public void AddAnyAirListener(System.Collections.Generic.List<IAnyAirListener> newValue) {
        var index = GameComponentsLookup.AnyAirListener;
        var component = (AnyAirListenerComponent)CreateComponent(index, typeof(AnyAirListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyAirListener(System.Collections.Generic.List<IAnyAirListener> newValue) {
        var index = GameComponentsLookup.AnyAirListener;
        var component = (AnyAirListenerComponent)CreateComponent(index, typeof(AnyAirListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyAirListener() {
        RemoveComponent(GameComponentsLookup.AnyAirListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyAirListener;

    public static Entitas.IMatcher<GameEntity> AnyAirListener {
        get {
            if (_matcherAnyAirListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyAirListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyAirListener = matcher;
            }

            return _matcherAnyAirListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyAirListener(IAnyAirListener value) {
        var listeners = hasAnyAirListener
            ? anyAirListener.value
            : new System.Collections.Generic.List<IAnyAirListener>();
        listeners.Add(value);
        ReplaceAnyAirListener(listeners);
    }

    public void RemoveAnyAirListener(IAnyAirListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyAirListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyAirListener();
        } else {
            ReplaceAnyAirListener(listeners);
        }
    }
}
